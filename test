curl -s -H "Authorization: Bearer <YOUR_TOKEN>" \
  "https://your-sonarqube-instance/api/issues/search?componentKeys=your-project-key&types=VULNERABILITY,SECURITY_HOTSPOT&tags=owasp-a1,owasp-a2,owasp-a3,owasp-a4,owasp-a5,owasp-a6,owasp-a7,owasp-a8,owasp-a9,owasp-a10&resolved=false"




curl -s -H "Authorization: Bearer $(SONARQUBE_TOKEN)" \
     "$SONARQUBE_URL/api/measures/component?component=$PROJECT_KEY&metricKeys=alert_status,bugs,vulnerabilities,code_smells"

curl -u admin:your_token "http://your-sonarqube-url/api/issues/search?types=VULNERABILITY&tags=owasp-top10" -o owasp_top10_issues.json


trigger: none  # Run manually or customize triggers

pool:
  vmImage: 'ubuntu-latest'  # Use an appropriate agent

variables:
  SONARQUBE_URL: "https://your-sonarqube-instance"
  PROJECT_KEY: "your-project-key"
  API_TOKEN: "$(SONARQUBE_TOKEN)"  # Store securely in Azure DevOps variables

steps:
  
  - script: |
      FILE_PATH="$(Build.ArtifactStagingDirectory)/SonarQubeReport.pdf"

      echo "Downloading SonarQube project report..."
      curl -s -u "$API_TOKEN:" -o $FILE_PATH "$SONARQUBE_URL/api/project_analysis/report?project=$PROJECT_KEY&format=pdf"

      echo "Report saved at: $FILE_PATH"
    displayName: "Download SonarQube Project Report"

  - task: PublishBuildArtifacts@1
    displayName: "Publish SonarQube Report"
    inputs:
      pathToPublish: "$(Build.ArtifactStagingDirectory)/SonarQubeReport.pdf"
      artifactName: "SonarQubeReport"
